<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bmf.infrastructure.dal.mapper.DomainMapper">
    <resultMap id="BaseResultMap" type="com.bmf.infrastructure.dal.po.DomainPO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="domain_code" jdbcType="INTEGER" property="domainCode"/>
        <result column="domain_name" jdbcType="VARCHAR" property="domainName"/>
        <result column="domain_alias" jdbcType="VARCHAR" property="domainAlias"/>
        <result column="domain_type" jdbcType="VARCHAR" property="domainType"/>
        <result column="domain_level" jdbcType="INTEGER" property="domainLevel"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, domain_code, domain_name, domain_alias, domain_type, domain_level
    </sql>

    <select id="selectOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM bmf_domain
        <trim prefix="where" prefixOverrides="and|or">
            <if test="domainCode != null">and domain_code = #{domainCode}</if>
            <if test="domainAlias != null">and domain_alias = #{domainAlias}</if>
        </trim>
        and is_deleted = 0
        limit 1
    </select>

    <select id="selectByDomainCode" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        <include refid="Base_Column_List"/>
        FROM bmf_domain
        where domain_code in
        <foreach collection="list" open="(" close=")" item="domainCode" separator=",">
            #{domainCode}
        </foreach>
        and is_deleted = 0
    </select>

    <select id="selectByBusinessCode" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        a.*
        FROM bmf_domain a
        join bmf_business_rel_domain b on a.domain_code = b.domain_code
        and b.business_code = #{businessCode}
        where a.is_deleted = 0
    </select>

    <select id="selectByDomainAlias" resultMap="BaseResultMap">
        select
        a.*
        FROM bmf_domain a
        join bmf_business_rel_domain b on a.domain_code = b.domain_code
        and b.business_code = #{businessCode}
        where a.domain_alias in
        <foreach collection="domainAliasList" open="(" close=")" item="domainAlias" separator=",">
            #{domainAlias}
        </foreach>
        and a.is_deleted = 0
    </select>

    <insert id="insert" parameterType="com.bmf.infrastructure.dal.po.DomainPO">
        insert into bmf_domain (domain_code, domain_name, domain_alias, domain_type, domain_level)
        values (
            #{domainCode,jdbcType=INTEGER},
            #{domainName,jdbcType=VARCHAR},
            #{domainAlias,jdbcType=VARCHAR},
            #{domainType,jdbcType=VARCHAR},
            #{domainLevel,jdbcType=INTEGER}
        )
    </insert>

    <insert id="batchInsert" parameterType="com.bmf.infrastructure.dal.po.DomainPO">
        insert into bmf_domain (domain_code, domain_name, domain_alias, domain_type, domain_level)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.domainCode,jdbcType=INTEGER},
                #{item.domainName,jdbcType=VARCHAR},
                #{item.domainAlias,jdbcType=VARCHAR},
                #{item.domainType,jdbcType=VARCHAR},
                #{item.domainLevel,jdbcType=INTEGER}
            </trim>
        </foreach>
    </insert>

    <update id="update">
        update bmf_domain
        <set>
            <if test="domainName != null">domain_name = #{domainName},</if>
        </set>
        where domain_code = #{domainCode}
    </update>

    <update id="batchUpdate" parameterType="java.util.List">
        update bmf_domain
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="domain_name = case domain_code" suffix="end">
                <foreach collection="list" item="item">
                    when #{item.domainCode} then #{item.domainName}
                </foreach>
            </trim>
        </trim>
        <where>
            domain_code in (
            <foreach collection="list" separator="," item="item">
                #{item.domainCode}
            </foreach>
            )
        </where>
    </update>

    <delete id="delete">
        delete from bmf_domain
        where domain_code = #{domainCode}
    </delete>

    <delete id="batchDelete" parameterType="java.util.List">
        delete from bmf_domain
        where domain_code in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item.domainCode}
        </foreach>
    </delete>
</mapper>